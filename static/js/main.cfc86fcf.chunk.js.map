{"version":3,"sources":["styles.js","state/reducer.js","state/initalState.js","components/AddDateTimeCell.js","components/TimeFormatToggle.js","components/TimezoneDisplayCell.js","components/DateTimeDisplayCell.js","components/AddTimezone.js","components/CustomTimeHeader.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","reducer","state","action","type","value","timezones","some","item","filter","timezone","popoverOpen","console","log","utcDateTime","baseTimesUtc","timeFormat","splice","index","Error","storedTimezones","localStorage","getItem","JSON","parse","storedBaseTimesUtc","map","time","moment","data","AddDateTimeCell","timezoneIndex","open","dispatch","classes","React","useState","anchorEl","setAnchorEl","tz","format","textValue","setTextValue","TableCell","IconButton","aria-describedby","onClick","event","currentTarget","AddAlarm","Popover","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","className","container","noValidate","style","padding","TextField","label","defaultValue","textField","InputLabelProps","shrink","variant","onChange","target","color","utc","Done","TimeFormatToggle","useEffect","setItem","ToggleButtonGroup","alignSelf","exclusive","newTimeFormat","aria-label","ToggleButton","TimezoneDisplayCell","component","scope","DeleteOutline","DateTimeDisplayCell","baseTimeUtc","align","hours","NightsStay","WbSunny","AddTimezone","autocompleteValue","autocompleteInputValue","setAutocompleteInputValue","TableRow","key","FormControl","formControl","Autocomplete","newValue","inputValue","onInputChange","newInputValue","options","timezoneList","renderInput","params","CustomTimeHeader","baseTimeUtcIndex","addDisplayPart","array","number","part","push","prevTime","diff","displayPart","duration","days","minutes","seconds","join","getDiffFromPrevious","App","useReducer","initialState","setUpdatedDate","stringify","interval","setInterval","Date","clearInterval","Container","maxWidth","CssBaseline","Avatar","Schedule","Typography","TableContainer","Paper","Table","table","TableHead","TableBody","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cfc86fcf.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n","function reducer(state, action) {\n  switch (action.type) {\n    case 'addTimezone':\n      if (\n        action.value &&\n        !state.timezones.some((item) => item === action.value)\n      ) {\n        state.timezones = [...state.timezones, action.value];\n        return {\n          ...state,\n          timezones: state.timezones\n        };\n      }\n      return state;\n    case 'deleteTimezone':\n      if (\n        action.value &&\n        state.timezones.some((item) => item === action.value)\n      ) {\n        state.timezones = [\n          ...state.timezones.filter((timezone) => timezone !== action.value)\n        ];\n        return {\n          ...state,\n          timezones: state.timezones\n        };\n      }\n      return state;\n    case 'openPopover':\n      return {\n        ...state,\n        popoverOpen: action.timezone\n      };\n    case 'addTime':\n      console.log(action.utcDateTime);\n      return {\n        ...state,\n        baseTimesUtc: [...state.baseTimesUtc, action.utcDateTime]\n      };\n    case 'setTimeFormat':\n      return { ...state, timeFormat: action.timeFormat };\n    case 'deleteBaseTime':\n      state.baseTimesUtc.splice(action.index, 1);\n      return {\n        ...state,\n        baseTimesUtc: [...state.baseTimesUtc]\n      };\n    default:\n      throw new Error();\n  }\n}\nexport default reducer;\n","import moment from 'moment-timezone';\n\nlet storedTimezones = localStorage.getItem('timezones');\nstoredTimezones = storedTimezones && JSON.parse(storedTimezones);\n\nlet storedBaseTimesUtc = localStorage.getItem('baseTimesUtc');\nstoredBaseTimesUtc =\n  storedBaseTimesUtc &&\n  JSON.parse(storedBaseTimesUtc).map((time) => moment(time));\n\nconst storedTimeFormat = localStorage.getItem('timeFormat');\n\nexport default {\n  timezones: storedTimezones || ['UTC'],\n  baseTimesUtc: storedBaseTimesUtc || [],\n  data: [],\n  timeFormat: storedTimeFormat || '24hr'\n};\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { AddAlarm, Done } from '@material-ui/icons';\nimport Popover from '@material-ui/core/Popover';\nimport TableCell from '@material-ui/core/TableCell';\nimport IconButton from '@material-ui/core/IconButton';\nimport moment from 'moment-timezone';\n\nfunction AddDateTimeCell({ timezone, timezoneIndex, open, dispatch, classes }) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [textValue, setTextValue] = React.useState(\n    moment().tz(timezone).format('YYYY-MM-DDTHH:mm')\n  );\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n\n    dispatch({ type: 'openPopover', timezone });\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    dispatch({ type: 'openPopover', timezone: null });\n  };\n  const handleChange = (event) => {\n    setTextValue(event.target.value);\n  };\n\n  const addDateTime = () => {\n    dispatch({\n      type: 'addTime',\n      utcDateTime: moment.tz(textValue, timezone).utc()\n    });\n  };\n\n  return (\n    <TableCell>\n      <IconButton\n        aria-describedby={open ? `popover-${timezoneIndex}` : ''}\n        onClick={handleClick}\n      >\n        <AddAlarm />\n      </IconButton>\n      <Popover\n        id={open ? `popover-${timezoneIndex}` : ''}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center'\n        }}\n      >\n        <form className={classes.container} noValidate style={{ padding: 20 }}>\n          <TextField\n            id=\"datetime-local\"\n            label=\"Date/Time\"\n            type=\"datetime-local\"\n            defaultValue={textValue}\n            className={classes.textField}\n            InputLabelProps={{\n              shrink: true\n            }}\n            variant=\"outlined\"\n            onChange={handleChange}\n          />\n          <IconButton color=\"primary\" variant=\"contained\" onClick={addDateTime}>\n            <Done />\n          </IconButton>\n        </form>\n      </Popover>\n    </TableCell>\n  );\n}\n\nexport default AddDateTimeCell;\n","import React, { useEffect } from 'react';\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\n\nfunction TimeFormatToggle({ state, dispatch }) {\n  const handleTimeFormat = (event, newTimeFormat) => {\n    dispatch({ type: 'setTimeFormat', timeFormat: newTimeFormat });\n  };\n\n  useEffect(() => {\n    localStorage.setItem('timeFormat', state.timeFormat);\n  }, [state.timeFormat]);\n\n  return (\n    <ToggleButtonGroup\n      style={{\n        alignSelf: 'flex-end'\n      }}\n      value={state.timeFormat}\n      exclusive\n      onChange={handleTimeFormat}\n      aria-label=\"text alignment\"\n    >\n      <ToggleButton value=\"12hr\" aria-label=\"12 hr\">\n        12hr\n      </ToggleButton>\n      <ToggleButton value=\"24hr\" aria-label=\"24 hr\">\n        24hr\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n\nexport default TimeFormatToggle;\n","import React from 'react';\nimport { IconButton, TableCell } from '@material-ui/core';\nimport { DeleteOutline } from '@material-ui/icons';\n\nfunction TimezoneDisplayCell({ timezone, timezoneIndex, dispatch }) {\n  return (\n    <TableCell component=\"td\" scope=\"row\">\n      {timezone}\n      {timezoneIndex > 0 && (\n        <IconButton\n          aria-label=\"delete\"\n          onClick={() => dispatch({ type: 'deleteTimezone', value: timezone })}\n        >\n          <DeleteOutline />\n        </IconButton>\n      )}\n    </TableCell>\n  );\n}\n\nexport default TimezoneDisplayCell;\n","import React from 'react';\n\nimport { TableCell } from '@material-ui/core';\nimport { NightsStay, WbSunny } from '@material-ui/icons';\n\nfunction DateTimeDisplayCell({ state, timezone, baseTimeUtc }) {\n  const time = baseTimeUtc.tz(timezone);\n  const displayTime = () => {\n    if (state.timeFormat === '24hr') {\n      return time.format('HH:mm:ss');\n    }\n    return time.format('hh:mm:ss A');\n  };\n\n  return (\n    <TableCell align=\"left\">\n      {time.format('YYYY-MM-DD')}\n      <br />\n      {displayTime()}\n      {time.hours() >= 12 ? <NightsStay /> : <WbSunny />}\n    </TableCell>\n  );\n}\n\nexport default DateTimeDisplayCell;\n","import React from 'react';\n\nimport { FormControl, TextField, TableCell, TableRow } from '@material-ui/core';\nimport { Autocomplete } from '@material-ui/lab';\n\n// Libraries\nimport timezoneList from '../lib/timezone-list';\n\nfunction AddTimezone({ classes, dispatch }) {\n  const [autocompleteValue] = React.useState(null);\n  const [autocompleteInputValue, setAutocompleteInputValue] = React.useState(\n    ''\n  );\n\n  return (\n    <TableRow key=\"newTimezone\">\n      <TableCell>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Autocomplete\n            id=\"combo-box-demo\"\n            value={autocompleteValue}\n            onChange={(event, newValue) => {\n              dispatch({ type: 'addTimezone', value: newValue });\n              setAutocompleteInputValue('');\n            }}\n            inputValue={autocompleteInputValue}\n            onInputChange={(event, newInputValue) => {\n              setAutocompleteInputValue(newInputValue);\n            }}\n            options={timezoneList}\n            style={{ width: 300 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Add timezone\" variant=\"outlined\" />\n            )}\n          />\n        </FormControl>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport default AddTimezone;\n","import React from 'react';\nimport { TableCell, IconButton } from '@material-ui/core';\nimport { DeleteOutline } from '@material-ui/icons';\nimport moment from 'moment';\n\nfunction CustomTimeHeader({ state, baseTimeUtc, baseTimeUtcIndex, dispatch }) {\n  const getDiffFromPrevious = () => {\n    let prevTime = moment().utc();\n    if (baseTimeUtcIndex !== 0) {\n      prevTime = state.baseTimesUtc[baseTimeUtcIndex - 1];\n    }\n\n    let diff = moment(baseTimeUtc.diff(prevTime));\n    const displayPart = [];\n    if (diff < 0) {\n      displayPart.push('-');\n      diff = diff * -1;\n    } else {\n      displayPart.push('+');\n    }\n    const duration = moment.duration(diff);\n    addDisplayPart(displayPart, duration.days(), 'd');\n    addDisplayPart(displayPart, duration.hours(), 'h');\n    addDisplayPart(displayPart, duration.minutes(), 'm');\n    addDisplayPart(displayPart, duration.seconds(), 's');\n    return displayPart.join(' ');\n  };\n\n  const addDisplayPart = (array, number, part) => {\n    if (number) {\n      array.push(`${number}${part}`);\n    }\n  };\n\n  return (\n    <TableCell align=\"left\">\n      {getDiffFromPrevious()}\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() =>\n          dispatch({ type: 'deleteBaseTime', index: baseTimeUtcIndex })\n        }\n      >\n        <DeleteOutline />\n      </IconButton>\n    </TableCell>\n  );\n}\n\nexport default CustomTimeHeader;\n","import React, { useEffect, useReducer } from 'react';\nimport './App.css';\nimport {\n  Avatar,\n  CssBaseline,\n  Paper,\n  Typography,\n  Container,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\nimport { Schedule } from '@material-ui/icons';\n\nimport moment from 'moment';\n\n// Libraries\nimport { useStyles } from './styles';\n\n// State\nimport reducer from './state/reducer';\nimport initialState from './state/initalState';\n\n// Custom Components\nimport AddDateTimeCell from './components/AddDateTimeCell';\nimport TimeFormatToggle from './components/TimeFormatToggle';\nimport TimezoneDisplayCell from './components/TimezoneDisplayCell';\nimport DateTimeDisplayCell from './components/DateTimeDisplayCell';\nimport AddTimezone from './components/AddTimezone';\nimport CustomTimeHeader from './components/CustomTimeHeader';\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [updatedDate, setUpdatedDate] = React.useState([]);\n\n  useEffect(() => {\n    localStorage.setItem('timezones', JSON.stringify(state.timezones));\n  }, [state.timezones]);\n\n  useEffect(() => {\n    localStorage.setItem('baseTimesUtc', JSON.stringify(state.baseTimesUtc));\n  }, [state.baseTimesUtc]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setUpdatedDate(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <Schedule />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Timezone Conversion Table\n        </Typography>\n        <TimeFormatToggle state={state} dispatch={dispatch} />\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Timezone</TableCell>\n                <TableCell align=\"left\">Now</TableCell>\n                {state.baseTimesUtc.map((baseTimeUtc, baseTimeUtcIndex) => (\n                  <CustomTimeHeader\n                    key={`timeHeader-${baseTimeUtcIndex}`}\n                    state={state}\n                    baseTimeUtc={baseTimeUtc}\n                    baseTimeUtcIndex={baseTimeUtcIndex}\n                    dispatch={dispatch}\n                  />\n                ))}\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {state.timezones.map((timezone, timezoneIndex) => (\n                <TableRow key={timezone}>\n                  <TimezoneDisplayCell\n                    timezone={timezone}\n                    timezoneIndex={timezoneIndex}\n                    dispatch={dispatch}\n                  />\n                  <DateTimeDisplayCell\n                    state={state}\n                    timezone={timezone}\n                    baseTimeUtc={moment()}\n                  />\n                  {state.baseTimesUtc.map((baseTimeUtc, baseTimeUtcIndex) => (\n                    <DateTimeDisplayCell\n                      key={`${timezone}-${baseTimeUtcIndex}`}\n                      state={state}\n                      timezone={timezone}\n                      baseTimeUtc={baseTimeUtc}\n                    />\n                  ))}\n                  <AddDateTimeCell\n                    timezone={timezone}\n                    timezoneIndex={timezoneIndex}\n                    open={timezone === state.popoverOpen}\n                    dispatch={dispatch}\n                    classes={classes}\n                  />\n                </TableRow>\n              ))}\n              <AddTimezone classes={classes} dispatch={dispatch} />\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}